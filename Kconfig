mainmenu "FluffyVM Configuration"

menu Debugging
  config DEBUG
    bool "Enable debug mode"
    default n
    help
      Enable debugging checks and show debug
      options
 
  choice
    prompt "Additional sanitizer"
    depends on DEBUG
    optional

    config ASAN
      bool "Enable Address Sanitizer"
    config TSAN
      bool "Enable Thread Sanitizer" 
    config MSAN
      bool "Enable Memory Sanitizer"
  endchoice
  
  config UBSAN
    bool "Enable Undefined behavior Sanitizer"
    default n

  config LLVM_XRAY
    bool "Enable LLVM's XRay instrumentation"
    default n
endmenu

menu General
  config VERSION_MAJOR
    int
    default 0

  config VERSION_MINOR
    int
    default 1

  config VERSION_PATCH
    int
    default 0

  config VERSION_LOCAL_VERSION
    string "Local version"
    default ""
    help
      Appended to the end of version string
  
  config STRICTLY_POSIX
    bool "Strict POSIX compliant"
    default y
    help
      Disable any non POSIX 2008 libc or
      platform specific API usage

  config USE_SETCONTEXT
    bool "Use ucontext functions for coroutine"
    depends on !STRICTLY_POSIX
    default n
    help
      As `*context` functions are removed in POSIX 2008
      there two approach which is use `*context`
      functions (ignoring portability) or use POSIX
      threads (inefficient)
      
      Rationale for why this option exist:
      This exists due its worth it to add as option.

      Rationale for why this off by default:
      I considered `*context` functions non portable
      for POSIX 2008 standard

  choice PLATFORM
    prompt "Select platform to target"
    depends on !STRICTLY_POSIX
    default PLATFORM_LINUX_5_10
    help
      Select platform you are targetting
      or none to not assume any platform
      specific features (depends on
      platform, additional options are
      shown)
    
#     config PLATFORM_LINUX_4_19
#      bool "Linux version >= 4.19"
#    config PLATFORM_LINUX_5_10
#      bool "Linux version >= 5.10"
    config PLATFORM_NONE
      bool "None"
  endchoice

  choice TARGET_LIBC
    prompt "Select libc to target"
    depends on !STRICTLY_POSIX
    default LIBC_GLIBC
    help
      Select libc to target and show
      additional options or none
      to not use non POSIX 2008 features
      (Please note that libc REQUIRED to 
      be POSIX 2008 compliant no matter 
      what you selects)

#    config LIBC_GLIBC
#      bool "GLibc"
#    config LIBC_MUSL
#      bool "Musl"
#    config LIBC_BIONIC
#      bool "Bionic"
    config LIBC_NONE
      bool "None"
  endchoice

  config THREAD_LIST_INCREMENT_SIZE
    int "Thread list increment size"
    range 1 50
    default 10
endmenu

menu Performance
  config ADDITIONAL_INLINING
    bool 
#"Additional inlining"
    default n
    help
      If you don't understand what this is, answer `n`
      In most cases you don't need touch this option

      This option forces some function to be inlined if
      compiler supports force inlining for improving 
      performance if compiler missed inlining oppurtunity 
      on hot functions

      As always with inlining guides. Compare result with 
      before and after enabling this option to see is which
      is better

  config USE_GOTO_POINTER
    bool "Use goto pointer"
endmenu




